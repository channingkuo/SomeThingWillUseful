#region 文件头部
/**********
Copyright @ 苏州瑞泰信息技术有限公司 All rights reserved. 
****************
作者 :carziertong
日期 : 2015-04-07
说明 : 登录页面
****************/

#endregion
using CoreGraphics;
using Foundation;
using MonoTouch.Dialog;
using RekTec.Contacts.Services;
using RekTec.Corelib.Configuration;
using RekTec.Corelib.Utils;
using RekTec.Corelib.Views;
using RekTec.Messages.PushNotification.Services;
using RekTec.MyProfile.Services;
using RekTec.MyProfile.ViewModels;
using RekTec.MyProfile.Views;
using RekTec.Version.Services;
using RekTec.Application.Services;
using System;
using System.IO;
using System.Threading.Tasks;
using UIKit;
using RekTec.Chat.Service;

namespace RekTec.Application.Views
{
	/// <summary>
	/// 登录页面
	/// </summary>
	public class LoginViewController : BaseViewController
	{
		private UITableView _tableView;
		UIWebView _webView;
		private UIViewBuilder _builder;
		private NSObject obs1, obs2;
		private nfloat _logoHeight;
		private UIImage _logo = UIImage.FromFile ("login_top.png");

		/// <summary>
		/// 页面加载的时候
		/// </summary>
		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();
			_logoHeight = (View.Bounds.Width / _logo.Size.Width) * _logo.Size.Height;

			_builder = new UIViewBuilder (this.View);
			_tableView = _builder.CreateTableView (View.Bounds);
			_tableView.BackgroundColor = UIColor.White;
			_tableView.SeparatorStyle = UITableViewCellSeparatorStyle.None;
			_tableView.ScrollEnabled = false;

			//修改状态栏背景颜色
			UIView statusview = new UIView (new CGRect (0, 0, View.Frame.Width, UiStyleSetting.StatusBarHeight));
			statusview.BackgroundColor = UiStyleSetting.RektecBlueColor;
			View.AddSubview (statusview);
		}


		/// <summary>
		/// 页面每次出现时执行
		/// </summary>
		public override void ViewWillAppear (bool animated)
		{
			base.ViewWillAppear (animated);
			this.NavigationController.NavigationBarHidden = true;
			_tableView.Source = new Source (this);
			_tableView.ReloadData ();


			obs1 = NSNotificationCenter.DefaultCenter.AddObserver (UIKeyboard.WillShowNotification, delegate (NSNotification n) {
				var duration = UIKeyboard.AnimationDurationFromNotification (n);

				UIView.BeginAnimations ("ResizeForKeyboard");
				UIView.SetAnimationDuration (duration);
				var contentInsets = new UIEdgeInsets (-(_logoHeight - 15), 0, 0, 0);
				_tableView.ContentInset = contentInsets;
				_tableView.ScrollIndicatorInsets = contentInsets;
				UIView.CommitAnimations ();
			});

			obs2 = NSNotificationCenter.DefaultCenter.AddObserver (UIKeyboard.WillHideNotification, delegate (NSNotification n) {
				var duration = UIKeyboard.AnimationDurationFromNotification (n);
				UIView.BeginAnimations ("ResizeForKeyboard");
				UIView.SetAnimationDuration (duration);
				var contentInsets = new UIEdgeInsets (0, 0, 0, 0);
				_tableView.ContentInset = contentInsets;
				_tableView.ScrollIndicatorInsets = contentInsets;
				UIView.CommitAnimations ();
			});
		}

		public override void ViewDidDisappear (bool animated)
		{
			base.ViewDidDisappear (animated);
			NSNotificationCenter.DefaultCenter.RemoveObserver (obs1);
			NSNotificationCenter.DefaultCenter.RemoveObserver (obs2);
		}

		/// <summary>
		/// 页面将要消失时候执行
		/// </summary>
		/// <param name="animated">If set to <c>true</c> animated.</param>
		public override void ViewWillDisappear (bool animated)
		{
			//this.NavigationController.NavigationBarHidden = false;
		}

		private void PreloadWebResource ()
		{
			//清除缓存
			NSUrlCache.SharedCache.RemoveAllCachedResponses ();

			//设置cookie的接受政策
			NSHttpCookieStorage.SharedStorage.AcceptPolicy = NSHttpCookieAcceptPolicy.Always;

			_webView = new UIWebView (new CGRect (0, 0, 0, 0));

			string address;
			if (GlobalAppSetting.XrmWebApiBaseUrl.EndsWith ("/")) {
				address = GlobalAppSetting.XrmWebApiBaseUrl;
			} else {
				address = GlobalAppSetting.XrmWebApiBaseUrl + "/";
			}

#if DEBUG
			var url = GlobalAppSetting.IsHTML5Debug ? Path.Combine (address, "debug/index.html") :
				Path.Combine (FileSystemUtil.CachesFolder, "www/index.html");
#else
			var url = Path.Combine (FileSystemUtil.CachesFolder, "www/index.html");
#endif
			_webView.LoadRequest (new NSUrlRequest (new NSUrl (url)));//跳转自定义url

			View.AddSubview (_webView);
		}

		/// <summary>
		/// table类
		/// </summary>
		public class Source : UITableViewSource
		{
			UITextField _txtUserName, _txtPassword;
			CheckBoxView _chkIsRememberPassword;

			readonly CGRect _textRect;
			readonly CGRect _btnRect;
			UIButton _btnLogion;


			private readonly LoginViewController _c;

			/// <summary>
			/// table的构造函数
			/// </summary>
			/// <param name="c">C.</param>
			public Source (LoginViewController c)
			{
				SystemSettingService.AddCleanupAction ("LoginViewController", () => InvokeOnMainThread (() => {
					GlobalAppSetting.UserCode = string.Empty;
					GlobalAppSetting.Password = string.Empty;
					GlobalAppSetting.IsRememberPassword = false;

					if (_txtUserName != null)
						_txtUserName.Text = string.Empty;
					if (_txtPassword != null)
						_txtPassword.Text = string.Empty;
					if (_chkIsRememberPassword != null)
						_chkIsRememberPassword.IsChecked = false;
				}));

				_c = c;
				_textRect = new CGRect (UiStyleSetting.PaddingSizeLarge, 0, _c.View.Bounds.Width - UiStyleSetting.PaddingSizeLarge * 2, UiStyleSetting.HeightTextBox);
				_btnRect = new CGRect (UiStyleSetting.PaddingSizeLarge, 0, _c.View.Bounds.Width - (UiStyleSetting.PaddingSizeLarge * 2), UiStyleSetting.HeightButton);
			}

			/// <summary>
			/// 每行选中时执行
			/// </summary>
			public override async void RowSelected (UITableView tableView, NSIndexPath indexPath)
			{
				await Task.Run (() => InvokeOnMainThread (() => _c.View.EndEditing (true)));
			}

			/// <summary>
			/// 设置每行的高度
			/// </summary>
			public override nfloat GetHeightForRow (UITableView tableView, NSIndexPath indexPath)
			{

				if (indexPath.Section == 0) {
					if (indexPath.Row == 0)
						return _c._logoHeight;
					else if (indexPath.Row == 1)
						return 60;
					else
						return 60;
				} else if (indexPath.Section == 1) {
					if (indexPath.Row == 0)
						return 70;
					else
						return 40;
				} else {
					return 200;
				}
			}

			/// <summary>
			/// 每个section有几行
			/// </summary>
			public override nint RowsInSection (UITableView tableView, nint section)
			{
				if ((int)section == 0)
					return 3;
				else if ((int)section == 1)
					return 2;
				else
					return 1;
			}

			/// <summary>
			/// 设置有多少节
			/// </summary>
			public override nint NumberOfSections (UITableView tableView)
			{
				return 2;
			}

			public override UITableViewCell GetCell (UITableView tableView, NSIndexPath indexPath)
			{
				if (indexPath.Section == 0) {
					if (indexPath.Row == 0)
						return CreateLogoCell (tableView);
					else if (indexPath.Row == 1)
						return CreateUserNameCell (tableView);
					else
						return CreatePasswordCell (tableView);
				} else {
					if (indexPath.Row == 0)
						return CreateSettingCell (tableView);
					else
						return CreateLoginButtonCell (tableView);
				}
			}

			/// <summary>
			/// 创建用户名的cell
			/// </summary>
			private UITableViewCell CreateUserNameCell (UITableView tableView)
			{
				const string cellIdentifier = "TableViewCellUserName";
				var cell = tableView.DequeueReusableCell (cellIdentifier);
				if (cell == null) {
					cell = _c._builder.CreateTableViewCell4Input (tableView, cellIdentifier);
					_txtUserName = _c._builder.CreateIconTextBox4TableViewCell (cell, _textRect, "请输入用户账号",
						GlobalAppSetting.UserCode, "login_user.png");

					_txtUserName.EditingChanged += (sender, e) => {
						if (GlobalAppSetting.IsRememberPassword)
							_txtPassword.Text = _txtUserName.Text != GlobalAppSetting.UserCode ? string.Empty : GlobalAppSetting.Password;
					};
				}

				return cell;
			}

			/// <summary>
			/// 创建密码的cell
			/// </summary>
			/// <returns>The password cell.</returns>
			/// <param name="tableView">Table view.</param>
			private UITableViewCell CreatePasswordCell (UITableView tableView)
			{
				const string cellIdentifier = "TableViewCellPassword";
				var cell = tableView.DequeueReusableCell (cellIdentifier);
				if (cell == null) {
					cell = _c._builder.CreateTableViewCell4Input (tableView, cellIdentifier);
					_txtPassword = _c._builder.CreateIconTextBox4TableViewCell (cell, _textRect, " 请输入密码",
						GlobalAppSetting.Password, "login_password.png");

					_txtPassword.SecureTextEntry = true;
				}
				return cell;
			}

			private async void LoginButtonClick (object sender, EventArgs e)
			{
				using (var t = new Toast ()) {
					try {
						_btnLogion.Enabled = false;
						t.ProgressWaiting ("正在登录...");
						var authUser = await AuthenticationService.LoginAsync (new UserModel () {
							uid = _txtUserName.Text,
							pwd = EncryptionUtil.DESDefaultEncryption (_txtPassword.Text)
						});

						if (authUser == null) {
							_btnLogion.Enabled = true;
							return;
						}

						GlobalAppSetting.XrmAuthToken = authUser.AuthToken;
						GlobalAppSetting.UserCode = _txtUserName.Text;
						GlobalAppSetting.DomainUserCode = authUser.UserCode;

						GlobalAppSetting.UserId = authUser.SystemUserId;
						if (GlobalAppSetting.IsRememberPassword)
							GlobalAppSetting.Password = _txtPassword.Text;

						new PushService ().Login (GlobalAppSetting.UserId, _txtPassword.Text);

						await VersionService.TryUpgradeWww ();

						var needUpdateIos = await VersionService.TryUpgradeIos ();
						if (needUpdateIos) {
							UpdateIosClient ();
							_btnLogion.Enabled = true;
							return;
						}

						_c.PreloadWebResource ();

						var connected = await AuthenticationService.Logon ();

						// 如果登录人员是服务员，则直接跳转到服务员的菜单页面
						var type = Convert.ToInt32 (await AuthenticationService.CheckTheUserType (_txtUserName.Text));
						// type=1表示当前用户为服务员
						if (connected && (type == 1 || type == 2)) {
							// 跳转到服务员菜单页面
							var wvc = new WebViewController () { _menuUrl = "roomControl/card" };
							_c.NavigationController.PushViewController (wvc, true);
							_btnLogion.Enabled = true;
							return;
						}

						// 获取聊天服务器的的配置信息
						//var chatConfig = await AuthenticationService.GetChatServiceInfo ();

						// 初始化聊天服务器       聊天服务器地址，主机名，端口号，XrmWebApiBaseUrl
						//ChatClient.Initialize (chatConfig.Host, chatConfig.ServiceName, chatConfig.Port, 
						//	GlobalAppSetting.XrmWebApiBaseUrl, 
						//	GlobalAppSetting.XrmAuthToken, 
						//	GlobalAppSetting.UserCode, 
						//	GlobalAppSetting.Password);

						// 登录聊天服务器
						//var isSuccess = await ChatClient.Logon ();

						if (/*isSuccess &&*/ connected) {
							//从接口获取数据插入数据表中
							await MenuService.LoadMenusToSqlLite ();

							ContactsService.StartSyncContact ();

							_c.NavigationController.PopViewController (false);
						}

						_btnLogion.Enabled = true;
					} catch (Exception ex) {
						AlertUtil.Error (ex.Message);
						_btnLogion.Enabled = true;
					}
				}
			}

			private void UpdateIosClient ()
			{
				var baseUrl = GlobalAppSetting.XrmWebApiBaseUrl;
				if (!baseUrl.ToLower ().Contains ("https")) {
					baseUrl = baseUrl.ToLower ().Replace ("http", "https");
				}
				if (!baseUrl.EndsWith ("/")) {
					baseUrl += "/";
				}
				string path = "itms-services://?action=download-manifest&url="
							  + baseUrl
							  + "csupdate/ios/ios.plist";
				UIApplication.SharedApplication.OpenUrl (new NSUrl (path));
			}

			/// <summary>
			/// 创建登录按钮的cell
			/// </summary>
			/// <returns>The login button cell.</returns>
			/// <param name="tableView">Table view.</param>
			private UITableViewCell CreateLoginButtonCell (UITableView tableView)
			{
				const string cellIdentifier = "TableViewCellLoginButton";
				UITableViewCell cell = tableView.DequeueReusableCell (cellIdentifier);

				if (cell == null) {
					cell = new UITableViewCell (UITableViewCellStyle.Default, cellIdentifier);
					cell.SelectionStyle = UITableViewCellSelectionStyle.None;
					_btnLogion = _c._builder.CreateButton4TableViewCell (cell, _btnRect, "登 录");
					_btnLogion.TouchUpInside += LoginButtonClick;
				}

				return cell;
			}

			/// <summary>
			/// 创建显示logo的cell
			/// </summary>
			/// <returns>The logo cell.</returns>
			/// <param name="tableView">Table view.</param>
			private UITableViewCell CreateLogoCell (UITableView tableView)
			{
				const string cellIdentifier = "TableViewCellLogoLabel";
				UITableViewCell cell = tableView.DequeueReusableCell (cellIdentifier);

				if (cell == null) {
					cell = new UITableViewCell (UITableViewCellStyle.Default, cellIdentifier);
					var scale = tableView.Frame.Width / _c._logo.Size.Width;
					UIImageView imageView = new UIImageView (new CGRect (0, 0, _c._logo.Size.Width * scale, _c._logo.Size.Height * scale));
					imageView.Image = _c._logo;
					cell.ContentView.Add (imageView);
				}
				return cell;
			}

			/// <summary>
			/// 创建显示标语的cell
			/// </summary>
			/// <returns>The subject cell.</returns>
			/// <param name="tableView">Table view.</param>
			private UITableViewCell CreateSettingCell (UITableView tableView)
			{
				const string cellIdentifier = "TableViewCellsSubjectLabel";
				UITableViewCell cell = tableView.DequeueReusableCell (cellIdentifier);

				if (cell == null) {
					cell = new UITableViewCell (UITableViewCellStyle.Default, cellIdentifier);
					cell.SelectionStyle = UITableViewCellSelectionStyle.None;

					#region CheckBox Remember Password
					_chkIsRememberPassword = new CheckBoxView (new CGRect (UiStyleSetting.PaddingSizeLarge, 25, 120, 20),
						"记住密码", GlobalAppSetting.IsRememberPassword);
					_chkIsRememberPassword.TouchUpInside += (sender, e) => {
						GlobalAppSetting.IsRememberPassword = _chkIsRememberPassword.IsChecked;
						if (!GlobalAppSetting.IsRememberPassword) {
							GlobalAppSetting.Password = string.Empty;
						}
					};
					cell.AddSubview (_chkIsRememberPassword);
					#endregion

					#region 忘记密码 Button
					var settingSeverBtn = new IconButtonView (new CGRect (tableView.Frame.Width - 120, 20, 100, 30),
											  "忘记密码", "login_setting.png");
					settingSeverBtn.SetTitleColor (UiStyleSetting.RektecBlueColor, UIControlState.Normal);
					settingSeverBtn.TouchUpInside += (sender, e) => {
						//						_c.NavigationController.PushViewController (new SeverAddressEditViewController (new RootElement ("服务器地址"),
						//							"服务器",
						//							GlobalAppSetting.XrmWebApiBaseUrl), true);
						// 链接到忘记密码的H5页面
						//var wvc = new WebViewController () { _menuUrl = GlobalAppSetting.XrmWebApiBaseUrl + "m/index.html#/password/forget" };
						var wvc = new WebViewController () { _menuUrl = "password/forget", _special = Path.Combine (NSBundle.MainBundle.ResourcePath, "www/index.html") };
						//_c.NavigationController.NavigationBarHidden = true;
						_c.NavigationController.PushViewController (wvc, false);
					};
					cell.AddSubview (settingSeverBtn);
					#endregion

				}
				return cell;
			}
		}
	}
}

